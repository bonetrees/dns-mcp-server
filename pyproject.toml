[tool.poetry]
name = "dns-mcp-server"
version = "0.1.0"
description = "DNS OSINT MCP Server - Comprehensive DNS reconnaissance tools for threat intelligence"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "dns_mcp_server"}]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastmcp = "^0.2.0"
dnspython = "^2.4.0"
aiodns = "^3.5.0"
asyncio-throttle = "^1.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
ruff = "^0.1.0"

[tool.poetry.scripts]
dns-mcp-server = "dns_mcp_server.server:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py310"

# Enable specific rule sets
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # pyflakes
    "I",    # isort
    "S",    # security rules (perfect for OSINT tool!)
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
    "RUF",  # ruff-specific rules
]

# Ignore specific rules that might be too strict
ignore = [
    "S101",  # Allow assert statements (common in tests)
    "S603",  # Allow subprocess calls (if needed)
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow asserts in tests

[tool.ruff.isort]
known-first-party = ["dns_mcp_server"]

[tool.ruff.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
